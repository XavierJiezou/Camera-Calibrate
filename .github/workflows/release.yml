name: Release

on:
  push:
    tags:
      - "*.*.*"
  # pull_request:
  #   tags:
  #     - "*.*.*"

jobs:
  release-windows:
    name: Release-windows
    runs-on: windows-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install Poetry
        run: pip install poetry

      - name: Update PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Build
        run: pyinstaller -wF opencv_camcalib/app.py -i images/favicon_256x256.ico --add-data "images/favicon_256x256.ico;images" -n opencv-camcalib-$(poetry version --short)

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: steps.check-version.outputs.prerelease == 'true'
          allowUpdates: true
          replacesArtifacts: true
  release-macos:
    name: Release-macos
    runs-on: macos-11
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install Poetry
        run: pip install poetry

      - name: Update PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install pyinstaller and pillow
        run: pip install pyinstaller pillow

      - name: Insall create-dmg
        run: brew install create-dmg

      - name: Build
        run: |
          pyinstaller -w -F opencv_camcalib/app.py -i images/favicon_256x256.ico --add-data "images/favicon_256x256.ico:images"
          create-dmg \
            --volname app \
            --volicon images/favicon_256x256.ico \
            --icon app.app 200 190 \
            --hide-extension app.app \
            dist/opencv-camcalib-$(poetry version --short).dmg \
            dist/
          rm dist/app

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: steps.check-version.outputs.prerelease == 'true'
          allowUpdates: true
          replacesArtifacts: true
  release-ubuntu:
    name: Release-ubuntu
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"

      - name: Install Poetry
        run: pip install poetry

      - name: Update PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build project for distribution
        run: poetry build

      - name: Check Version
        id: check-version
        run: |
          [[ "$(poetry version --short)" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] \
            || echo ::set-output name=prerelease::true

      - name: Install pyinstaller
        run: pip install pyinstaller

      - name: Build
        run: pyinstaller -w -F opencv_camcalib/app.py -i images/favicon_256x256.ico --add-data "images/favicon_256x256.ico:images" -n opencv-camcalib-$(poetry version --short).AppImage

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: steps.check-version.outputs.prerelease == 'true'
          allowUpdates: true
          replacesArtifacts: true

      # - name: Publish to PyPI
      #   env:
      #     POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      #   run: poetry publish
      - name: Delete AppImage
        run: rm dist/*.AppImage

      # - name: Publish to PyPI
      #   uses: ortega2247/pypi-upload-action@master
      #   with:
      #     user: XavierJiezou
      #     password: ${{ secrets.PYPI_PASSWORD }}
